// DO NOT EDIT! This is a generated file. Edit the JSDoc in src/*.js instead and run 'npm run build:types'.

/** Properties of an AttributeOperation. */
export interface IAttributeOperation {

    /** AttributeOperation range */
    range?: (IRange|null);

    /** AttributeOperation key */
    key?: (string|null);

    /** AttributeOperation oldValueBoolean */
    oldValueBoolean?: (boolean|null);

    /** AttributeOperation oldValueJson */
    oldValueJson?: (string|null);

    /** AttributeOperation newValueBoolean */
    newValueBoolean?: (boolean|null);

    /** AttributeOperation newValueJson */
    newValueJson?: (string|null);

    /** AttributeOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents an AttributeOperation. */
export class AttributeOperation implements IAttributeOperation {

    /**
     * Constructs a new AttributeOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IAttributeOperation);

    /** AttributeOperation range. */
    public range?: (IRange|null);

    /** AttributeOperation key. */
    public key: string;

    /** AttributeOperation oldValueBoolean. */
    public oldValueBoolean: boolean;

    /** AttributeOperation oldValueJson. */
    public oldValueJson: string;

    /** AttributeOperation newValueBoolean. */
    public newValueBoolean: boolean;

    /** AttributeOperation newValueJson. */
    public newValueJson: string;

    /** AttributeOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new AttributeOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns AttributeOperation instance
     */
    public static create(properties?: IAttributeOperation): AttributeOperation;

    /**
     * Encodes the specified AttributeOperation message. Does not implicitly {@link AttributeOperation.verify|verify} messages.
     * @param message AttributeOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IAttributeOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified AttributeOperation message, length delimited. Does not implicitly {@link AttributeOperation.verify|verify} messages.
     * @param message AttributeOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IAttributeOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an AttributeOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns AttributeOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): AttributeOperation;

    /**
     * Decodes an AttributeOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns AttributeOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): AttributeOperation;

    /**
     * Verifies an AttributeOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an AttributeOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns AttributeOperation
     */
    public static fromObject(object: { [k: string]: any }): AttributeOperation;

    /**
     * Creates a plain object from an AttributeOperation message. Also converts values to other types if specified.
     * @param message AttributeOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: AttributeOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this AttributeOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for AttributeOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of an InsertOperation. */
export interface IInsertOperation {

    /** InsertOperation position */
    position?: (IPosition|null);

    /** InsertOperation nodes */
    nodes?: (IElement[]|null);

    /** InsertOperation shouldReceiveAttributes */
    shouldReceiveAttributes?: (boolean|null);

    /** InsertOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents an InsertOperation. */
export class InsertOperation implements IInsertOperation {

    /**
     * Constructs a new InsertOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IInsertOperation);

    /** InsertOperation position. */
    public position?: (IPosition|null);

    /** InsertOperation nodes. */
    public nodes: IElement[];

    /** InsertOperation shouldReceiveAttributes. */
    public shouldReceiveAttributes: boolean;

    /** InsertOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new InsertOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns InsertOperation instance
     */
    public static create(properties?: IInsertOperation): InsertOperation;

    /**
     * Encodes the specified InsertOperation message. Does not implicitly {@link InsertOperation.verify|verify} messages.
     * @param message InsertOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IInsertOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified InsertOperation message, length delimited. Does not implicitly {@link InsertOperation.verify|verify} messages.
     * @param message InsertOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IInsertOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an InsertOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns InsertOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): InsertOperation;

    /**
     * Decodes an InsertOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns InsertOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): InsertOperation;

    /**
     * Verifies an InsertOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an InsertOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns InsertOperation
     */
    public static fromObject(object: { [k: string]: any }): InsertOperation;

    /**
     * Creates a plain object from an InsertOperation message. Also converts values to other types if specified.
     * @param message InsertOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: InsertOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this InsertOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for InsertOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a MarkerOperation. */
export interface IMarkerOperation {

    /** MarkerOperation name */
    name?: (string|null);

    /** MarkerOperation oldRange */
    oldRange?: (IRange|null);

    /** MarkerOperation newRange */
    newRange?: (IRange|null);

    /** MarkerOperation affectsData */
    affectsData?: (boolean|null);

    /** MarkerOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a MarkerOperation. */
export class MarkerOperation implements IMarkerOperation {

    /**
     * Constructs a new MarkerOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMarkerOperation);

    /** MarkerOperation name. */
    public name: string;

    /** MarkerOperation oldRange. */
    public oldRange?: (IRange|null);

    /** MarkerOperation newRange. */
    public newRange?: (IRange|null);

    /** MarkerOperation affectsData. */
    public affectsData: boolean;

    /** MarkerOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new MarkerOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MarkerOperation instance
     */
    public static create(properties?: IMarkerOperation): MarkerOperation;

    /**
     * Encodes the specified MarkerOperation message. Does not implicitly {@link MarkerOperation.verify|verify} messages.
     * @param message MarkerOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMarkerOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MarkerOperation message, length delimited. Does not implicitly {@link MarkerOperation.verify|verify} messages.
     * @param message MarkerOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMarkerOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MarkerOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MarkerOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MarkerOperation;

    /**
     * Decodes a MarkerOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MarkerOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MarkerOperation;

    /**
     * Verifies a MarkerOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MarkerOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MarkerOperation
     */
    public static fromObject(object: { [k: string]: any }): MarkerOperation;

    /**
     * Creates a plain object from a MarkerOperation message. Also converts values to other types if specified.
     * @param message MarkerOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MarkerOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MarkerOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for MarkerOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a MergeOperation. */
export interface IMergeOperation {

    /** MergeOperation sourcePosition */
    sourcePosition?: (IPosition|null);

    /** MergeOperation targetPosition */
    targetPosition?: (IPosition|null);

    /** MergeOperation graveyardPosition */
    graveyardPosition?: (IPosition|null);

    /** MergeOperation howMany */
    howMany?: (number|null);

    /** MergeOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a MergeOperation. */
export class MergeOperation implements IMergeOperation {

    /**
     * Constructs a new MergeOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMergeOperation);

    /** MergeOperation sourcePosition. */
    public sourcePosition?: (IPosition|null);

    /** MergeOperation targetPosition. */
    public targetPosition?: (IPosition|null);

    /** MergeOperation graveyardPosition. */
    public graveyardPosition?: (IPosition|null);

    /** MergeOperation howMany. */
    public howMany: number;

    /** MergeOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new MergeOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MergeOperation instance
     */
    public static create(properties?: IMergeOperation): MergeOperation;

    /**
     * Encodes the specified MergeOperation message. Does not implicitly {@link MergeOperation.verify|verify} messages.
     * @param message MergeOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMergeOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MergeOperation message, length delimited. Does not implicitly {@link MergeOperation.verify|verify} messages.
     * @param message MergeOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMergeOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MergeOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MergeOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MergeOperation;

    /**
     * Decodes a MergeOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MergeOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MergeOperation;

    /**
     * Verifies a MergeOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MergeOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MergeOperation
     */
    public static fromObject(object: { [k: string]: any }): MergeOperation;

    /**
     * Creates a plain object from a MergeOperation message. Also converts values to other types if specified.
     * @param message MergeOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MergeOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MergeOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for MergeOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a MoveOperation. */
export interface IMoveOperation {

    /** MoveOperation sourcePosition */
    sourcePosition?: (IPosition|null);

    /** MoveOperation howMany */
    howMany?: (number|null);

    /** MoveOperation targetPosition */
    targetPosition?: (IPosition|null);

    /** MoveOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a MoveOperation. */
export class MoveOperation implements IMoveOperation {

    /**
     * Constructs a new MoveOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IMoveOperation);

    /** MoveOperation sourcePosition. */
    public sourcePosition?: (IPosition|null);

    /** MoveOperation howMany. */
    public howMany: number;

    /** MoveOperation targetPosition. */
    public targetPosition?: (IPosition|null);

    /** MoveOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new MoveOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns MoveOperation instance
     */
    public static create(properties?: IMoveOperation): MoveOperation;

    /**
     * Encodes the specified MoveOperation message. Does not implicitly {@link MoveOperation.verify|verify} messages.
     * @param message MoveOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IMoveOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified MoveOperation message, length delimited. Does not implicitly {@link MoveOperation.verify|verify} messages.
     * @param message MoveOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IMoveOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a MoveOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns MoveOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): MoveOperation;

    /**
     * Decodes a MoveOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns MoveOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): MoveOperation;

    /**
     * Verifies a MoveOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a MoveOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns MoveOperation
     */
    public static fromObject(object: { [k: string]: any }): MoveOperation;

    /**
     * Creates a plain object from a MoveOperation message. Also converts values to other types if specified.
     * @param message MoveOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: MoveOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this MoveOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for MoveOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a RenameOperation. */
export interface IRenameOperation {

    /** RenameOperation position */
    position?: (IPosition|null);

    /** RenameOperation oldName */
    oldName?: (string|null);

    /** RenameOperation newName */
    newName?: (string|null);

    /** RenameOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a RenameOperation. */
export class RenameOperation implements IRenameOperation {

    /**
     * Constructs a new RenameOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRenameOperation);

    /** RenameOperation position. */
    public position?: (IPosition|null);

    /** RenameOperation oldName. */
    public oldName: string;

    /** RenameOperation newName. */
    public newName: string;

    /** RenameOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new RenameOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RenameOperation instance
     */
    public static create(properties?: IRenameOperation): RenameOperation;

    /**
     * Encodes the specified RenameOperation message. Does not implicitly {@link RenameOperation.verify|verify} messages.
     * @param message RenameOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRenameOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RenameOperation message, length delimited. Does not implicitly {@link RenameOperation.verify|verify} messages.
     * @param message RenameOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRenameOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RenameOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RenameOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RenameOperation;

    /**
     * Decodes a RenameOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RenameOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RenameOperation;

    /**
     * Verifies a RenameOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RenameOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RenameOperation
     */
    public static fromObject(object: { [k: string]: any }): RenameOperation;

    /**
     * Creates a plain object from a RenameOperation message. Also converts values to other types if specified.
     * @param message RenameOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RenameOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RenameOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for RenameOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a RootAttributeOperation. */
export interface IRootAttributeOperation {

    /** RootAttributeOperation root */
    root?: (string|null);

    /** RootAttributeOperation key */
    key?: (string|null);

    /** RootAttributeOperation oldValueBoolean */
    oldValueBoolean?: (boolean|null);

    /** RootAttributeOperation oldValueJson */
    oldValueJson?: (string|null);

    /** RootAttributeOperation newValueBoolean */
    newValueBoolean?: (boolean|null);

    /** RootAttributeOperation newValueJson */
    newValueJson?: (string|null);

    /** RootAttributeOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a RootAttributeOperation. */
export class RootAttributeOperation implements IRootAttributeOperation {

    /**
     * Constructs a new RootAttributeOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRootAttributeOperation);

    /** RootAttributeOperation root. */
    public root: string;

    /** RootAttributeOperation key. */
    public key: string;

    /** RootAttributeOperation oldValueBoolean. */
    public oldValueBoolean: boolean;

    /** RootAttributeOperation oldValueJson. */
    public oldValueJson: string;

    /** RootAttributeOperation newValueBoolean. */
    public newValueBoolean: boolean;

    /** RootAttributeOperation newValueJson. */
    public newValueJson: string;

    /** RootAttributeOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new RootAttributeOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RootAttributeOperation instance
     */
    public static create(properties?: IRootAttributeOperation): RootAttributeOperation;

    /**
     * Encodes the specified RootAttributeOperation message. Does not implicitly {@link RootAttributeOperation.verify|verify} messages.
     * @param message RootAttributeOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRootAttributeOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RootAttributeOperation message, length delimited. Does not implicitly {@link RootAttributeOperation.verify|verify} messages.
     * @param message RootAttributeOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRootAttributeOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RootAttributeOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RootAttributeOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RootAttributeOperation;

    /**
     * Decodes a RootAttributeOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RootAttributeOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RootAttributeOperation;

    /**
     * Verifies a RootAttributeOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RootAttributeOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RootAttributeOperation
     */
    public static fromObject(object: { [k: string]: any }): RootAttributeOperation;

    /**
     * Creates a plain object from a RootAttributeOperation message. Also converts values to other types if specified.
     * @param message RootAttributeOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RootAttributeOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RootAttributeOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for RootAttributeOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a RootOperation. */
export interface IRootOperation {

    /** RootOperation rootName */
    rootName?: (string|null);

    /** RootOperation elementName */
    elementName?: (string|null);

    /** RootOperation isAdd */
    isAdd?: (boolean|null);

    /** RootOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a RootOperation. */
export class RootOperation implements IRootOperation {

    /**
     * Constructs a new RootOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRootOperation);

    /** RootOperation rootName. */
    public rootName: string;

    /** RootOperation elementName. */
    public elementName: string;

    /** RootOperation isAdd. */
    public isAdd: boolean;

    /** RootOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new RootOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns RootOperation instance
     */
    public static create(properties?: IRootOperation): RootOperation;

    /**
     * Encodes the specified RootOperation message. Does not implicitly {@link RootOperation.verify|verify} messages.
     * @param message RootOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRootOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified RootOperation message, length delimited. Does not implicitly {@link RootOperation.verify|verify} messages.
     * @param message RootOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRootOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a RootOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns RootOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): RootOperation;

    /**
     * Decodes a RootOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns RootOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): RootOperation;

    /**
     * Verifies a RootOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a RootOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns RootOperation
     */
    public static fromObject(object: { [k: string]: any }): RootOperation;

    /**
     * Creates a plain object from a RootOperation message. Also converts values to other types if specified.
     * @param message RootOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: RootOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this RootOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for RootOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a SplitOperation. */
export interface ISplitOperation {

    /** SplitOperation splitPosition */
    splitPosition?: (IPosition|null);

    /** SplitOperation graveyardPosition */
    graveyardPosition?: (IPosition|null);

    /** SplitOperation howMany */
    howMany?: (number|null);

    /** SplitOperation insertionPosition */
    insertionPosition?: (IPosition|null);

    /** SplitOperation wasUndone */
    wasUndone?: (boolean|null);
}

/** Represents a SplitOperation. */
export class SplitOperation implements ISplitOperation {

    /**
     * Constructs a new SplitOperation.
     * @param [properties] Properties to set
     */
    constructor(properties?: ISplitOperation);

    /** SplitOperation splitPosition. */
    public splitPosition?: (IPosition|null);

    /** SplitOperation graveyardPosition. */
    public graveyardPosition?: (IPosition|null);

    /** SplitOperation howMany. */
    public howMany: number;

    /** SplitOperation insertionPosition. */
    public insertionPosition?: (IPosition|null);

    /** SplitOperation wasUndone. */
    public wasUndone: boolean;

    /**
     * Creates a new SplitOperation instance using the specified properties.
     * @param [properties] Properties to set
     * @returns SplitOperation instance
     */
    public static create(properties?: ISplitOperation): SplitOperation;

    /**
     * Encodes the specified SplitOperation message. Does not implicitly {@link SplitOperation.verify|verify} messages.
     * @param message SplitOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: ISplitOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified SplitOperation message, length delimited. Does not implicitly {@link SplitOperation.verify|verify} messages.
     * @param message SplitOperation message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: ISplitOperation, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a SplitOperation message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns SplitOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): SplitOperation;

    /**
     * Decodes a SplitOperation message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns SplitOperation
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): SplitOperation;

    /**
     * Verifies a SplitOperation message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a SplitOperation message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns SplitOperation
     */
    public static fromObject(object: { [k: string]: any }): SplitOperation;

    /**
     * Creates a plain object from a SplitOperation message. Also converts values to other types if specified.
     * @param message SplitOperation
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: SplitOperation, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this SplitOperation to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for SplitOperation
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a Position. */
export interface IPosition {

    /** Position root */
    root?: (string|null);

    /** Position rootMain */
    rootMain?: (boolean|null);

    /** Position rootGraveyard */
    rootGraveyard?: (boolean|null);

    /** Position path */
    path?: (number[]|null);

    /** Position stickiness */
    stickiness?: (string|null);
}

/** Represents a Position. */
export class Position implements IPosition {

    /**
     * Constructs a new Position.
     * @param [properties] Properties to set
     */
    constructor(properties?: IPosition);

    /** Position root. */
    public root: string;

    /** Position rootMain. */
    public rootMain: boolean;

    /** Position rootGraveyard. */
    public rootGraveyard: boolean;

    /** Position path. */
    public path: number[];

    /** Position stickiness. */
    public stickiness: string;

    /**
     * Creates a new Position instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Position instance
     */
    public static create(properties?: IPosition): Position;

    /**
     * Encodes the specified Position message. Does not implicitly {@link Position.verify|verify} messages.
     * @param message Position message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Position message, length delimited. Does not implicitly {@link Position.verify|verify} messages.
     * @param message Position message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IPosition, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Position message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Position
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Position;

    /**
     * Decodes a Position message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Position
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Position;

    /**
     * Verifies a Position message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Position message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Position
     */
    public static fromObject(object: { [k: string]: any }): Position;

    /**
     * Creates a plain object from a Position message. Also converts values to other types if specified.
     * @param message Position
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Position, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Position to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for Position
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of a Range. */
export interface IRange {

    /** Range start */
    start?: (IPosition|null);

    /** Range end */
    end?: (IPosition|null);
}

/** Represents a Range. */
export class Range implements IRange {

    /**
     * Constructs a new Range.
     * @param [properties] Properties to set
     */
    constructor(properties?: IRange);

    /** Range start. */
    public start?: (IPosition|null);

    /** Range end. */
    public end?: (IPosition|null);

    /**
     * Creates a new Range instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Range instance
     */
    public static create(properties?: IRange): Range;

    /**
     * Encodes the specified Range message. Does not implicitly {@link Range.verify|verify} messages.
     * @param message Range message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IRange, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Range message, length delimited. Does not implicitly {@link Range.verify|verify} messages.
     * @param message Range message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IRange, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes a Range message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Range
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Range;

    /**
     * Decodes a Range message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Range
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Range;

    /**
     * Verifies a Range message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates a Range message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Range
     */
    public static fromObject(object: { [k: string]: any }): Range;

    /**
     * Creates a plain object from a Range message. Also converts values to other types if specified.
     * @param message Range
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Range, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Range to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for Range
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}

/** Properties of an Element. */
export interface IElement {

    /** Element name */
    name?: (string|null);

    /** Element children */
    children?: (IElement[]|null);

    /** Element data */
    data?: (string|null);

    /** Element attributesBoolean */
    attributesBoolean?: ({ [k: string]: boolean }|null);

    /** Element attributesJson */
    attributesJson?: (string|null);
}

/** Represents an Element. */
export class Element implements IElement {

    /**
     * Constructs a new Element.
     * @param [properties] Properties to set
     */
    constructor(properties?: IElement);

    /** Element name. */
    public name: string;

    /** Element children. */
    public children: IElement[];

    /** Element data. */
    public data: string;

    /** Element attributesBoolean. */
    public attributesBoolean: { [k: string]: boolean };

    /** Element attributesJson. */
    public attributesJson: string;

    /**
     * Creates a new Element instance using the specified properties.
     * @param [properties] Properties to set
     * @returns Element instance
     */
    public static create(properties?: IElement): Element;

    /**
     * Encodes the specified Element message. Does not implicitly {@link Element.verify|verify} messages.
     * @param message Element message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encode(message: IElement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Encodes the specified Element message, length delimited. Does not implicitly {@link Element.verify|verify} messages.
     * @param message Element message or plain object to encode
     * @param [writer] Writer to encode to
     * @returns Writer
     */
    public static encodeDelimited(message: IElement, writer?: $protobuf.Writer): $protobuf.Writer;

    /**
     * Decodes an Element message from the specified reader or buffer.
     * @param reader Reader or buffer to decode from
     * @param [length] Message length if known beforehand
     * @returns Element
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): Element;

    /**
     * Decodes an Element message from the specified reader or buffer, length delimited.
     * @param reader Reader or buffer to decode from
     * @returns Element
     * @throws {Error} If the payload is not a reader or valid buffer
     * @throws {$protobuf.util.ProtocolError} If required fields are missing
     */
    public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): Element;

    /**
     * Verifies an Element message.
     * @param message Plain object to verify
     * @returns `null` if valid, otherwise the reason why it is not
     */
    public static verify(message: { [k: string]: any }): (string|null);

    /**
     * Creates an Element message from a plain object. Also converts values to their respective internal types.
     * @param object Plain object
     * @returns Element
     */
    public static fromObject(object: { [k: string]: any }): Element;

    /**
     * Creates a plain object from an Element message. Also converts values to other types if specified.
     * @param message Element
     * @param [options] Conversion options
     * @returns Plain object
     */
    public static toObject(message: Element, options?: $protobuf.IConversionOptions): { [k: string]: any };

    /**
     * Converts this Element to JSON.
     * @returns JSON object
     */
    public toJSON(): { [k: string]: any };

    /**
     * Gets the default type url for Element
     * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
     * @returns The default type url
     */
    public static getTypeUrl(typeUrlPrefix?: string): string;
}
